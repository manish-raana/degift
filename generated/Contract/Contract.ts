// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class GiftCreated extends ethereum.Event {
  get params(): GiftCreated__Params {
    return new GiftCreated__Params(this);
  }
}

export class GiftCreated__Params {
  _event: GiftCreated;

  constructor(event: GiftCreated) {
    this._event = event;
  }

  get giftId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get metadataURI(): string {
    return this._event.parameters[5].value.toString();
  }

  get expiration(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class GiftRedeemed extends ethereum.Event {
  get params(): GiftRedeemed__Params {
    return new GiftRedeemed__Params(this);
  }
}

export class GiftRedeemed__Params {
  _event: GiftRedeemed;

  constructor(event: GiftRedeemed) {
    this._event = event;
  }

  get giftId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class GiftRefunded extends ethereum.Event {
  get params(): GiftRefunded__Params {
    return new GiftRefunded__Params(this);
  }
}

export class GiftRefunded__Params {
  _event: GiftRefunded;

  constructor(event: GiftRefunded) {
    this._event = event;
  }

  get giftId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract__getGiftDetailsResultValue0Struct extends ethereum.Tuple {
  get sender(): Address {
    return this[0].toAddress();
  }

  get recipient(): Address {
    return this[1].toAddress();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get tokenAddress(): Address {
    return this[3].toAddress();
  }

  get metadataURI(): string {
    return this[4].toString();
  }

  get redeemed(): boolean {
    return this[5].toBoolean();
  }

  get tokenType(): i32 {
    return this[6].toI32();
  }

  get expiration(): BigInt {
    return this[7].toBigInt();
  }
}

export class Contract__giftCardsResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: string;
  value5: boolean;
  value6: i32;
  value7: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: string,
    value5: boolean,
    value6: i32,
    value7: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6)),
    );
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getSender(): Address {
    return this.value0;
  }

  getRecipient(): Address {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getTokenAddress(): Address {
    return this.value3;
  }

  getMetadataURI(): string {
    return this.value4;
  }

  getRedeemed(): boolean {
    return this.value5;
  }

  getTokenType(): i32 {
    return this.value6;
  }

  getExpiration(): BigInt {
    return this.value7;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getGiftDetails(_giftId: BigInt): Contract__getGiftDetailsResultValue0Struct {
    let result = super.call(
      "getGiftDetails",
      "getGiftDetails(uint256):((address,address,uint256,address,string,bool,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_giftId)],
    );

    return changetype<Contract__getGiftDetailsResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getGiftDetails(
    _giftId: BigInt,
  ): ethereum.CallResult<Contract__getGiftDetailsResultValue0Struct> {
    let result = super.tryCall(
      "getGiftDetails",
      "getGiftDetails(uint256):((address,address,uint256,address,string,bool,uint8,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_giftId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__getGiftDetailsResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getTotalGiftCardsCreated(): BigInt {
    let result = super.call(
      "getTotalGiftCardsCreated",
      "getTotalGiftCardsCreated():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getTotalGiftCardsCreated(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalGiftCardsCreated",
      "getTotalGiftCardsCreated():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserCreatedGiftCards(_user: Address): Array<BigInt> {
    let result = super.call(
      "getUserCreatedGiftCards",
      "getUserCreatedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigIntArray();
  }

  try_getUserCreatedGiftCards(
    _user: Address,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserCreatedGiftCards",
      "getUserCreatedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getUserReceivedGiftCards(_user: Address): Array<BigInt> {
    let result = super.call(
      "getUserReceivedGiftCards",
      "getUserReceivedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigIntArray();
  }

  try_getUserReceivedGiftCards(
    _user: Address,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserReceivedGiftCards",
      "getUserReceivedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getUserRedeemedGiftCards(_user: Address): Array<BigInt> {
    let result = super.call(
      "getUserRedeemedGiftCards",
      "getUserRedeemedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigIntArray();
  }

  try_getUserRedeemedGiftCards(
    _user: Address,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserRedeemedGiftCards",
      "getUserRedeemedGiftCards(address):(uint256[])",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  giftCards(param0: BigInt): Contract__giftCardsResult {
    let result = super.call(
      "giftCards",
      "giftCards(uint256):(address,address,uint256,address,string,bool,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Contract__giftCardsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toString(),
      result[5].toBoolean(),
      result[6].toI32(),
      result[7].toBigInt(),
    );
  }

  try_giftCards(
    param0: BigInt,
  ): ethereum.CallResult<Contract__giftCardsResult> {
    let result = super.tryCall(
      "giftCards",
      "giftCards(uint256):(address,address,uint256,address,string,bool,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__giftCardsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toString(),
        value[5].toBoolean(),
        value[6].toI32(),
        value[7].toBigInt(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userCreatedGiftCards(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userCreatedGiftCards",
      "userCreatedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_userCreatedGiftCards(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userCreatedGiftCards",
      "userCreatedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userReceivedGiftCards(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userReceivedGiftCards",
      "userReceivedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_userReceivedGiftCards(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userReceivedGiftCards",
      "userReceivedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userRedeemedGiftCards(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userRedeemedGiftCards",
      "userRedeemedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_userRedeemedGiftCards(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userRedeemedGiftCards",
      "userRedeemedGiftCards(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateGiftCall extends ethereum.Call {
  get inputs(): CreateGiftCall__Inputs {
    return new CreateGiftCall__Inputs(this);
  }

  get outputs(): CreateGiftCall__Outputs {
    return new CreateGiftCall__Outputs(this);
  }
}

export class CreateGiftCall__Inputs {
  _call: CreateGiftCall;

  constructor(call: CreateGiftCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _expiration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateGiftCall__Outputs {
  _call: CreateGiftCall;

  constructor(call: CreateGiftCall) {
    this._call = call;
  }
}

export class RedeemGiftCall extends ethereum.Call {
  get inputs(): RedeemGiftCall__Inputs {
    return new RedeemGiftCall__Inputs(this);
  }

  get outputs(): RedeemGiftCall__Outputs {
    return new RedeemGiftCall__Outputs(this);
  }
}

export class RedeemGiftCall__Inputs {
  _call: RedeemGiftCall;

  constructor(call: RedeemGiftCall) {
    this._call = call;
  }

  get _giftId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemGiftCall__Outputs {
  _call: RedeemGiftCall;

  constructor(call: RedeemGiftCall) {
    this._call = call;
  }
}

export class RefundGiftCall extends ethereum.Call {
  get inputs(): RefundGiftCall__Inputs {
    return new RefundGiftCall__Inputs(this);
  }

  get outputs(): RefundGiftCall__Outputs {
    return new RefundGiftCall__Outputs(this);
  }
}

export class RefundGiftCall__Inputs {
  _call: RefundGiftCall;

  constructor(call: RefundGiftCall) {
    this._call = call;
  }

  get _giftId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundGiftCall__Outputs {
  _call: RefundGiftCall;

  constructor(call: RefundGiftCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
